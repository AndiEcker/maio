#: import version main.__version__
#: import os os
#: import Label kivy.uix.label.Label
#: import Popup kivy.uix.popup.Popup


<MaioMenuBar@BoxLayout>:
    size_hint_y: None
    height: app.app_state['font_size'] * 1.8
    Button:
        text: '< --'
        on_release: app.main_app.context_leave()
        font_size: app.app_state['font_size'] * 2.1
        size_hint_max_x: self.height * 2.
        disabled: not app.app_state['context_path']
    Button:
        width: sp(369)
        font_size: app.app_state['font_size'] * 1.5
        on_release:
            Popup(title="Irmi's shopping list V " + version + "   (c) 2020 Andi Ecker",
            title_align='center',
            content=Label(text=
            "Touch short on leaf/list name for to toggle selection.\n"
            "Touch short on lists --> icon for\n"
            "to display their leafs and sub-lists.\n"
            "Touch long on leaf/list name for to change name\n"
            "or for to add/remove sub-list\n"
            "Drag leaf/list item on the right for to move it.",
            halign='center'),
            size_hint_y=.6
            ).open()
        StackLayout:
            pos: self.parent.pos
            size: self.parent.size
            Image:
                source: 'img/app_icon.jpg'
                size_hint_x: None
                width: self.parent.height
            Label:
                text:
                    " / ".join(_[:18 if app.landscape else 3] for _ in app.app_state['context_path']) \
                    + (" ->" + app.app_state['context_id'][:18 if app.landscape else 3] \
                    if app.app_state['context_id'] else "")
                size_hint_x: None
                width: self.parent.width - self.parent.height
                font_size: app.app_state['font_size'] * 1.2
                text_size: self.size
                halign: 'center'
                valign: 'middle'
                shorten: True
                shorten_from: 'left'
                split_str: '...'
    ListFiltButton:
        id: listFilterSelected
        text: 'B'
        state: 'down' if app.app_state['filter_selected'] else 'normal'
        canvas:
            Color:
                rgba: (0, 0, 1, .21)     # add blue
            Rectangle:
                pos: self.pos
                size: self.size
    ListFiltButton:
        id: listFilterUnselected
        text: 'G'
        state: 'down' if app.app_state['filter_unselected'] else 'normal'
    Button:
        text: '+'
        on_release: app.main_app.add_new_item()
        font_size: self.size[1]
        size_hint_max_x: self.height * 2.
        background_color: [.9, .9, .9, .6]
        background_normal: 'atlas://data/images/defaulttheme/slider_cursor_disabled'
        background_down: 'atlas://data/images/defaulttheme/slider_cursor'
        #icon: 'atlas://data/images/defaulttheme/audio-volume-high'
        canvas.after:
            Color:
                rgba: 1, 0, 0, .6
            Ellipse:
                pos: self.pos[0] + sp(6), self.pos[1] + sp(6)
                size: self.size[0] - sp(12), self.size[1] - sp(12)
    Button:
        text: '-'
        on_release: app.main_app.delete_current_item()
        font_size: self.size[1]
        size_hint_max_x: self.height * 2.
        size_hint_x: 1 if app.app_state['context_id'] else None
        width: self.height if app.app_state['context_id'] else 0
        disabled: not app.app_state['context_id']
        opacity: 1 if app.app_state['context_id'] else 0
        background_color: [.9, .9, .9, .6]
        background_normal: 'atlas://data/images/defaulttheme/slider_cursor_disabled'
        background_down: 'atlas://data/images/defaulttheme/slider_cursor'
        canvas.after:
            Color:
                rgba: 1, .3, 0, .36
            Ellipse:
                pos: self.pos[0] + sp(6), self.pos[1] + sp(6)
                size: self.size[0] - sp(12), self.size[1] - sp(12)


<ListFiltButton@ToggleButton>:
    # exchanging down/normal state and using radio button mode results in
    # .. automatic selection of at least one button (preventing empty list)
    important: True
    minimum_width: self.height
    font_size: app.app_state['font_size'] * 1.5
    size_hint_max_x: self.height * 2.
    background_normal: 'atlas://data/images/defaulttheme/slider_cursor'
    background_down: 'atlas://data/images/defaulttheme/slider_cursor_disabled'
    canvas:
        Color: 
            rgba: app.app_state['selected_item_ink']
        Rectangle:
            pos: self.pos
            size: self.size
    on_release: app.main_app.toggle_list_filter(self.text, self.state)

    
<ListItem>:
    item_data: app.main_app.update_item_data(self, toggleSelected.text, toggleSelected.state)
    drag_rectangle: toggleSelected.x, toggleSelected.y, toggleSelected.width, toggleSelected.height
    drag_timeout: 100000000
    drag_distance: 0
    size_hint_y: None
    height: app.app_state['font_size'] * 1.5
    canvas.after:
        Color:
            rgba: 0.99, 0.99, 0.3, .18 if app.app_state['context_id'] == root.item_data['id'] else 0
        Ellipse:
            pos: self.pos[0] - sp(3), self.pos[1] - sp(3)
            size: self.size[0] + sp(6), self.size[1] + sp(6)
    ToggleButton:
        id: toggleSelected
        state: 'down' if root.item_data.get('sel') else 'normal'
        text: root.item_data['id']      # .get('id', "")
        size_hint: 0.69, None
        font_size: app.app_state['font_size']
        height: self.font_size * 1.5
        halign: 'left'
        valign: 'middle'
        text_size: self.size
        shorten: True
        shorten_from: 'right'
        split_str: '..'
        canvas:
            Color:
                rgba:
                    app.app_state['selected_item_ink'] if self.state == 'down' else \
                    app.app_state['unselected_item_ink']
            Rectangle:
                pos: self.pos
                size: self.size
        on_touch_down: app.main_app.item_touch_down_handler(self.text, args[1])
        on_touch_up: app.main_app.item_touch_up_handler(self.text, args[1])
    Button:
        id: enterList
        text: '-- >'
        on_release: app.main_app.context_enter(root.item_data['id'])
        opacity: 1 if 'sub_list' in root.item_data else 0
        size_hint_x: None
        width: self.height * 1.8 if 'sub_list' in root.item_data else 0
        font_size: app.app_state['font_size'] * 1.2
        halign: 'center'
        valign: 'middle'
        text_size: self.size
        canvas:
            Color:
                rgba:
                    app.app_state['selected_item_ink'] if root.item_data.get('sel') \
                    else app.app_state['unselected_item_ink']
            Rectangle:
                pos: self.pos
                size: self.size
    Label:
        id: glideStart
        text: 'v^^v'
        #on_press: app.main_app.glide_start(root)
        #on_release: app.main_app.glide_stop(root)
        size_hint_x: None
        width: self.height * 2.7
        font_size: app.app_state['font_size'] * 1.5
        halign: 'center'
        valign: 'middle'
        text_size: self.size


<ItemEditor@Popup>:
    size_hint: 0.9, 0.3
    on_dismiss: app.main_app.edit_item_finished(itemTextInp.text, itemIsListInp.state)
    auto_dismiss: True
    BoxLayout:
        TextInput:
            id: itemTextInp
            text: root.title
            focus: True
            multiline: False
            size_hint_x: 0.69
            font_size: app.app_state['font_size']
            height: self.font_size * 1.5
            halign: 'left'
            valign: 'middle'
            text_size: app.main_app._current_widget.size  # self.size
        ToggleButton:
            id: itemIsListInp
            state: 'down' if 'sub_list' in app.main_app.get_item_by_name(root.title) else 'normal'
            text: '-- >'
            size_hint_x: 0.30
            font_size: app.app_state['font_size'] * 1.2
            padding_x: sp(9)
            halign: 'center'
            valign: 'middle'
            text_size: self.size


<ConfirmListDeletePopup@Popup>:
    size_hint: 0.9, 0.15
    auto_dismiss: True
    title: "Confirm deletion of the list " + root.what + " including all sub-leafs/-lists"
    title_align: 'center'
    what: self.what
    Button:
        text: "Ok"
        on_release: app.main_app.delete_item_confirmed(root.what); root.dismiss()


<DropPlaceholder@Widget>
    size_hint_y: None
    canvas:
        Color:
            rgba: 1, 1, 0, 0.6
        Rectangle:
            pos: self.pos
            size: self.size


<MaioRoot@FloatLayout>:
    id: maioRoot
    BoxLayout:
        orientation: 'vertical'
        MaioMenuBar:
            id: menuBar
        ScrollView:
            do_scroll_x: False
            BoxLayout:
                id: listContainer
                orientation: 'vertical'
                size_hint_y: None
    Button:
        text: '+'
        size_hint: None, None
        size: sp(60) if app.landscape else sp(90), sp(90) if app.landscape else sp(60)
        font_size: self.size[1]
        pos_hint: {'right': 1.0}
        background_color: [.9, .9, .9, .6]
        background_normal: 'atlas://data/images/defaulttheme/slider_cursor_disabled'
        background_down: 'atlas://data/images/defaulttheme/slider_cursor'
        on_release: app.main_app.add_new_item()
        canvas.after:
            Color:
                rgba: 1, 0, 0, .6
            Ellipse:
                pos: self.pos[0] + sp(6), self.pos[1] + sp(6)
                size: self.size[0] - sp(12), self.size[1] - sp(12)
                source: 'img/app_icon.jpg'
