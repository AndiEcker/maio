#: import version main.__version__
#: import MIN_FONT_SIZE ae.kivy_app.MIN_FONT_SIZE
#: import MAX_FONT_SIZE ae.kivy_app.MAX_FONT_SIZE

# needed for dynamic (c) Popup and FontSizeDropDown
#: import Label kivy.uix.label.Label
#: import Popup kivy.uix.popup.Popup


<MaioRoot@FloatLayout>:
    id: maioRoot
    BoxLayout:
        orientation: 'vertical'
        MaioMenuBar:
            id: menuBar
        ScrollView:
            do_scroll_x: False
            BoxLayout:
                id: listContainer
                orientation: 'vertical'
                size_hint_y: None
    BoxLayout:
        orientation: 'horizontal' if app.landscape else 'vertical'
        size_hint: None, None
        size:
            self.padding[0] * (9.9 if app.app_state['context_id'] and app.landscape else 3.9), \
            self.padding[1] * (9.9 if app.app_state['context_id'] and not app.landscape else 3.9)
        pos_hint: {'right': 0.93}
        padding: app.app_state['font_size']
        spacing: app.app_state['font_size']
        ContextButton:
            source: 'img/72/edit_item.png'
            on_release: app.main_app.edit_item_popup(app.app_state['context_id'])
            size_hint:
                1 if app.app_state['context_id'] or not app.landscape else None, \
                1 if app.app_state['context_id'] or app.landscape else None
            width: self.width if app.app_state['context_id'] or not app.landscape else 0
            height: self.height if app.app_state['context_id'] or app.landscape else 0
            disabled: not app.app_state['context_id']
            opacity: 1 if app.app_state['context_id'] else 0
            canvas.before:
                Color:
                    rgba: app.app_state['context_id_ink'][:3] + (0.69, )
                Ellipse:
                    pos: self.pos[0] + sp(6), self.pos[1] + sp(6)
                    size: self.size[0] - sp(12), self.size[1] - sp(12)
        ContextButton:
            source: 'img/72/del_item.png'
            on_release: app.main_app.delete_item_popup(app.main_app.context_id)
            size_hint:
                1 if app.app_state['context_id'] or not app.landscape else None, \
                1 if app.app_state['context_id'] or app.landscape else None
            width: self.width if app.app_state['context_id'] or not app.landscape else 0
            height: self.height if app.app_state['context_id'] or app.landscape else 0
            disabled: not app.app_state['context_id']
            opacity: 1 if app.app_state['context_id'] else 0
            canvas.before:
                Color:
                    rgba: app.app_state['context_id_ink'][:3] + ((app.app_state['context_id_ink'][3] + 1.0) / 2.0, )
                Rectangle:
                    pos: self.pos[0] + sp(3), self.pos[1] + sp(3)
                    size: self.size[0] - sp(6), self.size[1] - sp(6)
        ContextButton:
            source: 'img/72/add_item.png'
            on_release: app.main_app.add_item_popup()
            canvas.before:
                Color:
                    rgba: 1, 0, 0, .63
                Ellipse:
                    pos: self.pos[0] + sp(6), self.pos[1] + sp(6)
                    size: self.size[0] - sp(12), self.size[1] - sp(12)


<MaioMenuBar@BoxLayout>:
    size_hint_y: None
    height: app.app_state['font_size'] * 1.8
    ContextButton:
        source: 'img/72/context_leave.png'
        on_release: app.main_app.context_leave()
        size_hint_max_x: self.height * 1.8
        size_hint_min_x: self.height * 1.2
        disabled: not app.app_state['context_path']
        canvas.before:
            Color:
                rgba: app.app_state['context_id_ink']
            Ellipse:
                pos: self.pos[0] + sp(6), self.pos[1] + sp(6)
                size: self.size[0] - sp(12), self.size[1] - sp(12)
    Button:
        on_release:
            Popup(title=f"{app.main_app.app_title} V {version}    (c) 2020 Andi Ecker",
            title_align='center',
            content=Label(text=
            "Touch short on name for to toggle selection.\n"
            "Touch short on lists --> icon for\n"
            "to display their leafs and sub-lists.\n"
            "Edit selected leaf/list for to change name\n"
            "or for to add/remove their sub-list.\n"
            "Drag leaf/list item with the icon on the right\n"
            "of the leaf/list item for to move it.",
            halign='center',
            font_size=app.app_state['font_size']
            ),
            size_hint_y=.6
            ).open()
        font_size: app.app_state['font_size'] * 1.5
        size_hint_x: None
        width: self.height
        Image:
            source: 'img/app_icon.jpg'
            allow_stretch: True
            pos: self.parent.pos
            size: self.parent.size
    Button:
        text:
            " / ".join(_[:18 if app.landscape else 3] for _ in app.app_state['context_path']) \
            + (" ->" + app.app_state['context_id'][:18 if app.landscape else 3] \
            if app.app_state['context_id'] else "")
        on_release: app.open_settings()
        size_hint_x: .69
        font_size: app.app_state['font_size'] * 1.2
        text_size: self.size
        shorten: True
        shorten_from: 'left'
        split_str: '...'
        halign: 'center'
        valign: 'middle'
    FontSizeDropDown:
        id: fontSizer
    ListFiltButton:
        id: listFilterSelected
        state: 'down' if app.app_state['filter_selected'] else 'normal'
        canvas:
            Color:
                rgba:
                    (0.6, 0.6, 0.6, 0.6) if app.app_state['filter_selected'] else app.app_state['selected_item_ink']
            RoundedRectangle:
                pos: self.pos
                size: self.size
    ListFiltButton:
        id: listFilterUnselected
        state: 'down' if app.app_state['filter_unselected'] else 'normal'
        canvas:
            Color:
                rgba:
                    (0.6, 0.6, 0.6, 0.6) if app.app_state['filter_unselected'] else app.app_state['unselected_item_ink']
            RoundedRectangle:
                pos: self.pos
                size: self.size


<ContextButton@ButtonBehavior+Image>:
    background_normal: 'atlas://data/images/defaulttheme/slider_cursor'
    allow_stretch: True


<ListFiltButton@ToggleButton>:
    on_release: app.main_app.toggle_list_filter(self)
    minimum_width: self.height
    size_hint_max_x: self.height * 1.2
    size_hint_min_x: self.height
    background_normal: 'atlas://data/images/defaulttheme/slider_cursor'
    background_down: 'atlas://data/images/defaulttheme/slider_cursor_disabled'


<FontSizeDropDown@BoxLayout>:
    size_hint_max_x: self.height * 1.2
    # fix weak ref bug: https://stackoverflow.com/questions/49367546/kivy-weakly-referenced-object-no-longer-exists
    drop_down_id_weak_ref_fix: dropDown.__self__
    Button:
        on_parent: dropDown.dismiss()
        on_release: dropDown.open(self)
        font_size: app.app_state['font_size'] * 1.5
        Image:
            source: 'img/72/font_size.png'
            allow_stretch: True
            pos: self.parent.pos
            size: self.parent.size
        DropDown:
            id: dropDown
            on_select: app.main_app.set_font_size(args[1])
            auto_width: False
            width: root.parent.right - root.x - sp(9)
            Button:
                text: f'Aa Bb Zz {round(MIN_FONT_SIZE)}'
                on_release: dropDown.select(MIN_FONT_SIZE)
                font_size: MIN_FONT_SIZE
                size_hint_y: None
                size: self.texture_size
            Button:
                text: f'Aa Bb Zz {round((MIN_FONT_SIZE + MAX_FONT_SIZE) / 2)}'
                on_release: dropDown.select((MIN_FONT_SIZE + MAX_FONT_SIZE) / 2)
                font_size: (MIN_FONT_SIZE + MAX_FONT_SIZE) / 2
                size_hint_y: None
                size: self.texture_size
            Button:
                text: f'Aa Bb Zz {round(MAX_FONT_SIZE)}'
                on_release: dropDown.select(MAX_FONT_SIZE)
                font_size: MAX_FONT_SIZE
                size_hint_y: None
                size: self.texture_size


<ListItem>:
    item_data: app.main_app.update_item_data(self, toggleSelected.text, toggleSelected.state)
    size_hint_y: None
    height: app.main_app.font_size * 1.5
    padding: [1, 1]
    canvas.after:
        Color:
            rgba:
                app.main_app.context_id_ink[:3] + (.69 if app.app_state['context_id'] == root.item_data['id'] else 0, )
        Line:
            width: sp(1.8)
            rectangle: self.x + sp(2), self.y + sp(2), self.width - sp(4), self.height - sp(4)
    ToggleButton:
        id: toggleSelected
        state: 'down' if root.item_data.get('sel') else 'normal'
        text: root.item_data['id']
        on_state: app.main_app.change_app_state('context_id', self.text)
        on_text: app.main_app.change_app_state('context_id', self.text)
        font_size: app.main_app.font_size
        text_size: self.size
        halign: 'left'
        valign: 'middle'
        shorten: True
        shorten_from: 'right'
        split_str: '..'
        canvas:
            Color:
                rgba: app.main_app.selected_item_ink if self.state == 'down' else app.main_app.unselected_item_ink
            RoundedRectangle:
                pos: self.pos
                size: self.size
    ContextButton:
        id: enterList
        source: 'img/72/context_enter.png'
        on_release: app.main_app.context_enter(root.item_data['id'])
        opacity: 1 if 'sub_list' in root.item_data else 0
        size_hint_x: None
        width: self.height * 2.7 if 'sub_list' in root.item_data else 0
        canvas.before:
            Color:
                rgba: app.main_app.context_id_ink
            Ellipse:
                pos: self.pos
                size: self.size
            Color:
                rgba: app.main_app.selected_item_ink if root.item_data.get('sel') else app.main_app.unselected_item_ink
            Ellipse:
                pos: self.pos
                size: self.size
    ContextButton:
        id: dragHandle
        source: 'img/72/drag_item.png'
        opacity: 1 if not (app.main_app.filter_selected or app.main_app.filter_unselected) else 0
        size_hint_x: None
        width: self.height * 1.8 if not (app.main_app.filter_selected or app.main_app.filter_unselected) else 0
        canvas.before:
            Color:
                rgba: app.main_app.context_id_ink
            RoundedRectangle:
                pos: self.pos
                size: self.size
            Color:
                rgba: app.main_app.selected_item_ink if root.item_data.get('sel') else app.main_app.unselected_item_ink
            RoundedRectangle:
                pos: self.pos
                size: self.size


<ItemEditor@Popup>:
    size_hint: 0.9, app.main_app.font_size * 3.6 / app.root.height
    on_dismiss: app.main_app.edit_item_finished(itemTextInp.text, itemIsListInp.state)
    auto_dismiss: True
    BoxLayout:
        TextInput:
            id: itemTextInp
            text: root.title
            focus: True
            multiline: False
            size_hint_x: 0.69
            font_size: app.main_app.font_size
            height: self.font_size * 1.5
            text_size: self.size
            halign: 'left'
            valign: 'middle'
        ToggleButton:
            id: itemIsListInp
            state: 'down' if 'sub_list' in app.main_app.get_item_by_name(root.title) else 'normal'
            size_hint_x: 0.30
            font_size: app.main_app.font_size * 1.2
            padding_x: sp(9)
            Image:
                source: 'img/72/context_enter.png'
                allow_stretch: True
                pos: self.parent.pos
                size: self.parent.size


<ConfirmItemDeletePopup@Popup>:
    auto_dismiss: True
    title:
        "... loading ..." if root.which_item is None or root.sub_list_only is None else \
        "Confirm deletion of item(s): " + ",".join(app.main_app.sub_item_names(root.which_item, root.sub_list_only))
    title_align: 'center'
    which_item: self.which_item
    sub_list_only: self.sub_list_only
    title_size: app.main_app.font_size
    size_hint: 0.9, 0.21
    Button:
        text: "Ok"
        on_release: app.main_app.delete_item_confirmed(root.which_item, root.sub_list_only); root.dismiss()
        font_size: app.main_app.font_size


<DropPlaceholder>
    size_hint_y: None
    dark: False
    canvas:
        Color:
            rgba:
                app.main_app.context_path_ink if root.dark else app.main_app.context_id_ink
        RoundedRectangle:
            pos: self.pos
            size: self.size
