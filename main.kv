#: import version main.__version__
#: import MIN_FONT_SIZE main.MIN_FONT_SIZE
#: import MAX_FONT_SIZE main.MAX_FONT_SIZE

# needed for dynamic (c) Popup and FontSizeDropDown
#: import Label kivy.uix.label.Label
#: import Popup kivy.uix.popup.Popup
#: import Factory kivy.factory


<MaioRoot@FloatLayout>:
    id: maioRoot
    BoxLayout:
        orientation: 'vertical'
        MaioMenuBar:
            id: menuBar
        ScrollView:
            do_scroll_x: False
            BoxLayout:
                id: listContainer
                orientation: 'vertical'
                size_hint_y: None
    BoxLayout:
        orientation: 'horizontal' if app.landscape else 'vertical'
        size_hint: None, None
        size:
            app.app_state['font_size'] * (2.4 * (3 if app.app_state['context_id'] else 1) if app.landscape else 1.8), \
            app.app_state['font_size'] * (1.8 if app.landscape else 2.4 * len(self.children))
        pos_hint: {'right': 0.93}
        ContextButton:
            text: '/'
            on_release: app.main_app.edit_item_popup(app.app_state['context_id'])
            font_size: self.size[1]
            size_hint_max_x: self.height * 1.5
            size_hint_x: 1 if app.app_state['context_id'] else None
            width: self.height if app.app_state['context_id'] else 0
            disabled: not app.app_state['context_id']
            opacity: 1 if app.app_state['context_id'] else 0
            canvas.after:
                Color:
                    rgba: app.app_state['context_id_ink']
                Ellipse:
                    pos: self.pos[0] + sp(6), self.pos[1] + sp(6)
                    size: self.size[0] - sp(12), self.size[1] - sp(12)
        ContextButton:
            text: '-'
            on_release: app.main_app.delete_current_item()
            font_size: self.size[1]
            size_hint_max_x: self.height * 2.1
            size_hint_x: 1 if app.app_state['context_id'] else None
            width: self.height if app.app_state['context_id'] else 0
            disabled: not app.app_state['context_id']
            opacity: 1 if app.app_state['context_id'] else 0
            canvas.after:
                Color:
                    rgba: app.app_state['context_id_ink']
                Ellipse:
                    pos: self.pos[0] + sp(6), self.pos[1] + sp(6)
                    size: self.size[0] - sp(12), self.size[1] - sp(12)
        ContextButton:
            text: '+'
            on_release: app.main_app.add_new_item()
            font_size: self.size[1]
            canvas.after:
                Color:
                    rgba: 1, 0, 0, .69
                Ellipse:
                    pos: self.pos[0] + sp(6), self.pos[1] + sp(6)
                    size: self.size[0] - sp(12), self.size[1] - sp(12)


<MaioMenuBar@BoxLayout>:
    size_hint_y: None
    height: app.app_state['font_size'] * 1.8
    Button:
        text: '< --'
        on_release: app.main_app.context_leave()
        font_size: app.app_state['font_size'] * 1.5
        size_hint_max_x: self.height * 2.1
        disabled: not app.app_state['context_path']
        canvas.after:
            Color:
                rgba: app.app_state['context_id_ink']
            Ellipse:
                pos: self.pos[0] + sp(6), self.pos[1] + sp(6)
                size: self.size[0] - sp(12), self.size[1] - sp(12)
    Button:
        width: sp(369)
        font_size: app.app_state['font_size'] * 1.5
        on_release:
            Popup(title=f"{app.main_app.app_title} V {version}    (c) 2020 Andi Ecker",
            title_align='center',
            content=Label(text=
            "Touch short on leaf/list name for to toggle selection.\n"
            "Touch short on lists --> icon for\n"
            "to display their leafs and sub-lists.\n"
            "Edit selected leaf/list for to change name\n"
            "or for to add/remove their sub-list.\n"
            "Drag leaf/list item with the icon on the right\n"
            "of the leaf/list item for to move it.",
            halign='center'),
            size_hint_y=.6
            ).open()
        StackLayout:
            pos: self.parent.pos
            size: self.parent.size
            Image:
                source: 'img/app_icon.jpg'
                size_hint_x: None
                width: self.parent.height
            Label:
                text:
                    " / ".join(_[:18 if app.landscape else 3] for _ in app.app_state['context_path']) \
                    + (" ->" + app.app_state['context_id'][:18 if app.landscape else 3] \
                    if app.app_state['context_id'] else "")
                size_hint_x: None
                width: self.parent.width - self.parent.height
                font_size: app.app_state['font_size'] * 1.2
                text_size: self.size
                halign: 'center'
                valign: 'middle'
                shorten: True
                shorten_from: 'left'
                split_str: '...'
    FontSizeDropDown:
    ListFiltButton:
        id: listFilterSelected
        state: 'down' if app.app_state['filter_selected'] else 'normal'
        canvas:
            Color:
                rgba: app.app_state['selected_item_ink']
            RoundedRectangle:
                pos: self.pos
                size: self.size
    ListFiltButton:
        id: listFilterUnselected
        state: 'down' if app.app_state['filter_unselected'] else 'normal'
        canvas:
            Color:
                rgba: app.app_state['unselected_item_ink']
            RoundedRectangle:
                pos: self.pos
                size: self.size


<ListFiltButton@ToggleButton>:
    on_release: app.main_app.toggle_list_filter(self)
    minimum_width: self.height
    size_hint_max_x: self.height * 2.1
    background_normal: 'atlas://data/images/defaulttheme/slider_cursor'
    background_down: 'atlas://data/images/defaulttheme/slider_cursor_disabled'


<FontSizeDropDown@BoxLayout>:
    size_hint_max_x: self.height * 1.2
    Button:
        text: 'Aa'
        on_parent: dropDown.dismiss()
        on_release: dropDown.open(self)
        font_size: app.app_state['font_size'] * 1.5
        DropDown:
            id: dropDown
            on_select: app.main_app.set_font_size(args[1])
            auto_width: False
            width: root.parent.right - root.x - sp(9)
            Button:
                text: f'Aa Bb Zz {round(MIN_FONT_SIZE)}'
                on_release: dropDown.select(MIN_FONT_SIZE)
                font_size: MIN_FONT_SIZE
                size_hint_y: None
                size: self.texture_size
            Button:
                text: f'Aa Bb Zz {round((MIN_FONT_SIZE + MAX_FONT_SIZE) / 2)}'
                on_release: dropDown.select((MIN_FONT_SIZE + MAX_FONT_SIZE) / 2)
                font_size: (MIN_FONT_SIZE + MAX_FONT_SIZE) / 2
                size_hint_y: None
                size: self.texture_size
            Button:
                text: f'Aa Bb Zz {round(MAX_FONT_SIZE)}'
                on_release: dropDown.select(MAX_FONT_SIZE)
                font_size: MAX_FONT_SIZE
                size_hint_y: None
                size: self.texture_size


<ListItem>:
    item_data: app.main_app.update_item_data(self, toggleSelected.text, toggleSelected.state)
    size_hint_y: None
    height: app.app_state['font_size'] * 1.5
    padding: [sp(3), sp(3)]
    canvas.after:
        Color:
            rgba:
                app.app_state['context_id_ink'][:3] \
                + (.69 if app.app_state['context_id'] == root.item_data['id'] else 0, )
        Line:
            width: sp(3)
            rectangle: self.x, self.y, self.width, self.height
    ToggleButton:
        id: toggleSelected
        state: 'down' if root.item_data.get('sel') else 'normal'
        text: root.item_data['id']
        on_state: app.main_app.change_app_state('context_id', self.text)
        on_text: app.main_app.change_app_state('context_id', self.text)
        size_hint: 0.69, None
        font_size: app.app_state['font_size']
        height: self.font_size * 1.5 - 2 * root.padding[1]
        halign: 'left'
        valign: 'middle'
        text_size: self.size[0] - 2 * root.padding[0], self.size[1] - 2 * root.padding[1]
        shorten: True
        shorten_from: 'right'
        split_str: '..'
        canvas:
            Color:
                rgba:
                    app.app_state['selected_item_ink'] if self.state == 'down' else \
                    app.app_state['unselected_item_ink']
            RoundedRectangle:
                pos: self.pos
                size: self.size
    ToggleButton:
        id: enterList
        text: '-- >'
        on_release: app.main_app.context_enter(root.item_data['id'])
        opacity: 1 if 'sub_list' in root.item_data else 0
        size_hint_x: None
        width: self.height * 2.7 if 'sub_list' in root.item_data else 0
        font_size: app.app_state['font_size'] * 1.2
        halign: 'center'
        valign: 'middle'
        text_size: self.size
        canvas:
            Color:
                rgba:
                    app.app_state['selected_item_ink'] if root.item_data.get('sel') else \
                    app.app_state['unselected_item_ink']
            Rectangle:
                pos: self.pos
                size: self.size
    Button:
        id: dragHandle
        text: '^v^'
        size_hint_x: None
        width: self.height * 1.8
        font_size: app.app_state['font_size'] * 1.5
        halign: 'center'
        valign: 'middle'
        text_size: self.size
        canvas:
            Color:
                rgba:
                    app.app_state['selected_item_ink'] if root.item_data.get('sel') else \
                    app.app_state['unselected_item_ink']
            RoundedRectangle:
                pos: self.pos
                size: self.size


<ItemEditor@Popup>:
    size_hint: 0.9, 0.3
    on_dismiss: app.main_app.edit_item_finished(itemTextInp.text, itemIsListInp.state)
    auto_dismiss: True
    BoxLayout:
        TextInput:
            id: itemTextInp
            text: root.title
            focus: True
            multiline: False
            size_hint_x: 0.69
            font_size: app.app_state['font_size']
            height: self.font_size * 1.5
            halign: 'left'
            valign: 'middle'
            text_size: app.main_app._current_widget.size
        ToggleButton:
            id: itemIsListInp
            state: 'down' if 'sub_list' in app.main_app.get_item_by_name(root.title) else 'normal'
            text: '-- >'
            size_hint_x: 0.30
            font_size: app.app_state['font_size'] * 1.2
            padding_x: sp(9)
            halign: 'center'
            valign: 'middle'
            text_size: self.size


<ConfirmListDeletePopup@Popup>:
    size_hint: 0.9, 0.15
    auto_dismiss: True
    title: "Confirm deletion of the list " + str(root.what) + " including all sub-leafs/-lists"
    title_align: 'center'
    what: self.what
    Button:
        text: "Ok"
        on_release: app.main_app.delete_item_confirmed(root.what); root.dismiss()


<DropPlaceholder>
    size_hint_y: None
    dark: False
    canvas:
        Color:
            rgba:
                app.app_state['context_path_ink'] if root.dark else \
                app.app_state['context_id_ink']
        RoundedRectangle:
            pos: self.pos
            size: self.size


<ContextButton@Button>:
    background_normal: 'atlas://data/images/defaulttheme/slider_cursor'
    background_down: 'atlas://data/images/defaulttheme/slider_cursor_disabled'
